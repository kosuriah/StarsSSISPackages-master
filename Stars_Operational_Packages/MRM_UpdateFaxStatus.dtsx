<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/5/2015 11:06:06 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LT-J6QQN12-0112"
  DTS:CreatorName="PHARMMD\saideswar.thondapu"
  DTS:DTSID="{50406EC1-28D3-4E7A-8F65-5D7F9F711E0B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProdmrmUpdateFaxStatus"
  DTS:PackageType="5"
  DTS:VersionBuild="226"
  DTS:VersionGUID="{2DFF9769-CE3D-480C-9BDA-E13F64D6B00B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F3DAB62A-838F-4890-81F1-50715D0287D9}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::FaxSendPathMRM]+"BatchFax\\NoVerifiedFaxNumber\\NewFaxesNoVerifiedFaxNumber.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\p10prdsde003.pharmmd.local\Stars\FaxSend\MRM\BatchFax\NoVerifiedFaxNumber\NewFaxesNoVerifiedFaxNumber.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="25"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="providerNPI"
              DTS:DTSID="{B5B4D472-E7F3-470C-955E-BC551620565E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="campaignCreateDate"
              DTS:DTSID="{5E80A610-4A42-4280-A0F3-06AD2443D608}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="recipientFaxNumber"
              DTS:DTSID="{7ABA0C75-1265-4974-9E97-4939C0BC4D6D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="senderFaxNumber"
              DTS:DTSID="{EE495000-472C-4A78-96DD-EF58E7DA02CF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="250"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="fileName"
              DTS:DTSID="{B0B301E4-FE03-4A88-9219-9E46445B0548}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="faxSentIndicator"
              DTS:DTSID="{A61A8D55-E9AD-44CA-A79F-D8460CCAB645}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="faxStatusUpdateDate"
              DTS:DTSID="{F605F755-AE73-4FC5-A7A9-368D142C0351}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="currentFaxStatus"
              DTS:DTSID="{452E613D-44AE-478A-A169-19C7081128E9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="1000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="faxStatusDetail"
              DTS:DTSID="{2D96AC6B-689B-41A0-9ED8-031B2DB15D76}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="errorCode"
              DTS:DTSID="{F0FA2849-7FCC-4D90-8E5D-71597D43ED94}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="1000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="errorType"
              DTS:DTSID="{0A1FD5C4-D288-4023-99B5-14775B99CD2C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="mrmBatchFaxPDFID"
              DTS:DTSID="{4859201F-50B9-47AF-AC29-DCBFE47032B0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="pmdClientID"
              DTS:DTSID="{C15D54E0-DEA8-4619-B898-9CB14746AE1E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="faxSentToFaximinionDate"
              DTS:DTSID="{E6EFD7F8-F15B-4B80-A34F-DB7667549177}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19082A7B-DFB0-4CEB-8F9C-DE4755D9163B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchFaxDate">
      <DTS:VariableValue
        DTS:DataType="8">2018-01-24</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE2D6306-D964-4CB4-9027-5CD413CBC647}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sourceFolder]+&quot;\\error&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="errorFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\p10prdsde003.pharmmd.local\Stars\FaxSend\MRM\BatchFax\2018-01-24\error</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3AF7D87E-8C87-439A-B0B4-46B1F1DAF9C6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FaximinionGetAddress]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FaximinionGet">
      <DTS:VariableValue
        DTS:DataType="8">http://faximinion.pharmmd.com/faxes/{0}/status.json?api_key={1}</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11D07ACD-F5BC-416E-8DE4-7F4DEC953030}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FaximinionAPIKey]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FaximinionKey">
      <DTS:VariableValue
        DTS:DataType="8">b255d73dacdc6155</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78E2D52A-9FE9-4CBB-B021-614090F4E9A0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sourceFolder]+&quot;\\sent&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sentFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\p10prdsde003.pharmmd.local\Stars\FaxSend\MRM\BatchFax\2018-01-24\sent</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11F3C051-6963-42FA-BDA7-09E33718AEF8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FaxSendPathMRM]+&quot;BatchFax\\&quot;+ @[User::BatchFaxDate]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\p10prdsde003.pharmmd.local\Stars\FaxSend\MRM\BatchFax\2018-01-24</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30859450-BC05-48D2-9F29-2448C15AAC0C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get BatchFaxDate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5bcfc96d-5b9c-491b-8bd0-d2b5f2c19ed1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get BatchFaxDate"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{41920AF9-8DB7-4D45-A69E-694E95087E27}"
          SQLTask:SqlStatementSource="Select max(campaigncreatedate) from SCMRM.dbo.mrmBatchFaxPDFs"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::BatchFaxDate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get fax status from faximinion"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F77B35A8-DFAC-4120-BD45-69F97B00C8E6}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get fax status from faximinion"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get fax status from faximinion\Get all Fax which need status"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get all Fax which need status"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT 
    mrmBatchFaxPDFID
  , providerNPI
  , campaignCreateDate
  , recipientFaxNumber
  , senderFaxNumber
  , fileName
  , faxSentIndicator
  , faxSentToFaximinionDate
  , faxStatusUpdateDate
  , currentFaxStatus
  , faxStatusDetail
  , errorCode
  , errorType
  , pmdClientID
FROM
    SCMRM.dbo.mrmBatchFaxPDFs
where isnull(currentFaxStatus,'New')&lt;&gt;'success'
AND faxSentToFaximinionDate IS NOT NULL 
and campaigncreatedate = ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{19082A7B-DFB0-4CEB-8F9C-DE4755D9163B};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get fax status from faximinion\Get all Fax which need status.Connections[OleDbConnection]"
                  connectionManagerID="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  connectionManagerRefId="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[providerNPI]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[providerNPI]"
                      length="25"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[providerNPI]"
                      name="providerNPI"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[campaignCreateDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[campaignCreateDate]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[campaignCreateDate]"
                      name="campaignCreateDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[recipientFaxNumber]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[recipientFaxNumber]"
                      length="20"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[recipientFaxNumber]"
                      name="recipientFaxNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[senderFaxNumber]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[senderFaxNumber]"
                      length="20"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[senderFaxNumber]"
                      name="senderFaxNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[fileName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[fileName]"
                      length="250"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[fileName]"
                      name="fileName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxSentIndicator]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxSentIndicator]"
                      length="1"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxSentIndicator]"
                      name="faxSentIndicator"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxStatusUpdateDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxStatusUpdateDate]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxStatusUpdateDate]"
                      name="faxStatusUpdateDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[currentFaxStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[currentFaxStatus]"
                      length="50"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[currentFaxStatus]"
                      name="currentFaxStatus"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxStatusDetail]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxStatusDetail]"
                      length="1000"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxStatusDetail]"
                      name="faxStatusDetail"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[errorCode]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[errorCode]"
                      length="2000"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[errorCode]"
                      name="errorCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[errorType]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[errorType]"
                      length="1000"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[errorType]"
                      name="errorType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[pmdClientID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[pmdClientID]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[pmdClientID]"
                      name="pmdClientID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[mrmBatchFaxPDFID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[mrmBatchFaxPDFID]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[mrmBatchFaxPDFID]"
                      name="mrmBatchFaxPDFID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxSentToFaximinionDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxSentToFaximinionDate]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxSentToFaximinionDate]"
                      name="faxSentToFaximinionDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[providerNPI]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      name="providerNPI" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[campaignCreateDate]"
                      dataType="dbDate"
                      name="campaignCreateDate" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[recipientFaxNumber]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      name="recipientFaxNumber" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[senderFaxNumber]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      name="senderFaxNumber" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[fileName]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      name="fileName" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxSentIndicator]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="faxSentIndicator" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxStatusUpdateDate]"
                      dataType="dbTimeStamp"
                      name="faxStatusUpdateDate" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      name="currentFaxStatus" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxStatusDetail]"
                      dataType="wstr"
                      length="1000"
                      name="faxStatusDetail" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[errorCode]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      name="errorCode" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[errorType]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      name="errorType" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[pmdClientID]"
                      dataType="i4"
                      name="pmdClientID" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[mrmBatchFaxPDFID]"
                      dataType="i4"
                      name="mrmBatchFaxPDFID" />
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].ExternalColumns[faxSentToFaximinionDate]"
                      dataType="dbTimeStamp"
                      name="faxSentToFaximinionDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[mrmBatchFaxPDFID]"
                      dataType="i4"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[mrmBatchFaxPDFID]"
                      name="mrmBatchFaxPDFID" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[providerNPI]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[providerNPI]"
                      name="providerNPI" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[campaignCreateDate]"
                      dataType="dbDate"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[campaignCreateDate]"
                      name="campaignCreateDate" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[recipientFaxNumber]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[recipientFaxNumber]"
                      name="recipientFaxNumber" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[senderFaxNumber]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[senderFaxNumber]"
                      name="senderFaxNumber" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[fileName]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[fileName]"
                      name="fileName" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxSentIndicator]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxSentIndicator]"
                      name="faxSentIndicator" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxSentToFaximinionDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxSentToFaximinionDate]"
                      name="faxSentToFaximinionDate" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxStatusUpdateDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxStatusUpdateDate]"
                      name="faxStatusUpdateDate" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[currentFaxStatus]"
                      name="currentFaxStatus" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxStatusDetail]"
                      dataType="wstr"
                      length="1000"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[faxStatusDetail]"
                      name="faxStatusDetail" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[errorCode]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[errorCode]"
                      name="errorCode" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[errorType]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[errorType]"
                      name="errorType" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[pmdClientID]"
                      dataType="i4"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[pmdClientID]"
                      name="pmdClientID" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get fax status from faximinion\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 9]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 9"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 7]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 7"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 8]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 8"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 6]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 6"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 2]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 5]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 5"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 4]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get fax status from faximinion\Update fax Status from Faximinion"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Update fax Status from Faximinion"
              validateExternalMetadata="False"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Collections.Specialized;
using System.IO;
using Phaxio;
using System.Data.SqlClient;
using System.Windows.Forms;


#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection); 
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion


    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {
        connMgr = this.Connections.scmrmADO;
        sqlConn = (SqlConnection) connMgr.AcquireConnection(null);
    }

    public override void ReleaseConnections()
    {
        connMgr.ReleaseConnection(sqlConn);
    }

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        string updateQuery = "update [dbo].[mrmBatchFaxPDFs] set  [faxSentIndicator] = @FaxSendInd, faxStatusUpdateDate = getdate(), [currentFaxStatus]= @LastStatus, [faxStatusDetail]= @ResponseMessage, " +
                              "ErrorCode = @ErrorCode, ErrorType = @ErrorType where [mrmBatchFaxPDFID] = @mrmBatchFaxPDFID and [providerNPI]=@providerNPI";
        sqlCmd = new SqlCommand(updateQuery, sqlConn);

        sqlParam = new SqlParameter("@mrmBatchFaxPDFID", SqlDbType.BigInt);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@FaxSendInd", SqlDbType.Char, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@LastStatus", SqlDbType.VarChar, 20);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@ResponseMessage", SqlDbType.VarChar, 1000);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@ErrorCode", SqlDbType.VarChar, 2000);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@ErrorType", SqlDbType.VarChar, 1000);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@providerNPI", SqlDbType.VarChar, 25);
        sqlCmd.Parameters.Add(sqlParam);
        
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        
        
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        //Prod
        string FaximinionAddress = Variables.FaximinionGet;
        string FaximinionAPIKey = Variables.FaximinionKey;
        
        ////Prod
        //string FaximinionAddress = "http://faximinion.pharmmd.com/faxes/{0}/status.json?api_key={1}";
        //string FaximinionAPIKey = "b255d73dacdc6155";
        //Test
        //string FaximinionAddress = "http://faximinionstaging.pharmmd.com/faxes/{0}/status.json?api_key={1}";
        //string FaximinionAPIKey = "e4d605934e4c5733e9ef";
       
        //Prod
        string ArchiveFolderPath = Variables.sentFolder + @"\";
        string ErrorFolderPath = Variables.errorFolder + @"\";

        ////Prod
        //string ArchiveFolderPath = @"\\pharmmd.local\sharedfolder\Collaboration\MRM Call List\CallListPDFs\archive\batchFaxSentArchive\";
        //string ErrorFolderPath = @"\\pharmmd.local\sharedfolder\Collaboration\MRM Call List\CallListPDFs\error\"; 

        //Dev
        //string ArchiveFolderPath = @"W:\Stars\Fax\Archive\";
        //string ErrorFolderPath = @"W:\Stars\Fax\Error\";
        //Local
        //string ArchiveFolderPath = @"C:\Stars\Fax\Archive\";
        //string ErrorFolderPath = @"C:\Stars\Fax\Error\";

        try
        {
            //string Filename = Row.fileName + ".pdf";
            string Filename = Row.fileName;
            string FileCreateDate = Row.campaignCreateDate.ToString("yyyymmDD");
          //  long mrmBatchFaxPDFID = Row.mrmBatchFaxPDFID;
          //  System.Windows.Forms.MessageBox.Show(Row.providerNPI);
          //  System.Windows.Forms.MessageBox.Show(Row.mrmBatchFaxPDFID.ToString()); 
            string FaximinionStaAddress = string.Format(FaximinionAddress, Row.mrmBatchFaxPDFID.ToString(), FaximinionAPIKey);
            PhaxioAPI objPhaxioAPI = new PhaxioAPI();
            PhaxioOperationResult PhaxioResult = objPhaxioAPI.GetFaxStatus(FaximinionStaAddress);
          
            if (PhaxioResult.Success == true)
            {
                sqlCmd.Parameters["@mrmBatchFaxPDFID"].Value = Row.mrmBatchFaxPDFID.ToString();
                sqlCmd.Parameters["@providerNPI"].Value = Row.providerNPI;
                sqlCmd.Parameters["@FaxSendInd"].Value = "Y";
                sqlCmd.Parameters["@LastStatus"].Value = PhaxioResult.Data["status"] == string.Empty ? DBNull.Value : PhaxioResult.Data["status"];
                sqlCmd.Parameters["@ResponseMessage"].Value = PhaxioResult.Message;
                sqlCmd.Parameters["@ErrorCode"].Value = PhaxioResult.Data["error_code"] == string.Empty ? DBNull.Value : PhaxioResult.Data["error_code"];
                sqlCmd.Parameters["@ErrorType"].Value = PhaxioResult.Data["error_type"] == string.Empty ? DBNull.Value : PhaxioResult.Data["error_type"];
              
                sqlCmd.ExecuteNonQuery();

                //ArchiveFolderPath = ArchiveFolderPath  + FileCreateDate;
                //ErrorFolderPath = ErrorFolderPath  + FileCreateDate;

                if (PhaxioResult.Data["status"].ToString() == "failure")
                {
                    if (!Directory.Exists(ErrorFolderPath))
                        Directory.CreateDirectory(ErrorFolderPath);
                    if (File.Exists(ErrorFolderPath  + Filename))
                        File.Delete(ErrorFolderPath + Filename);
                    File.Move(ArchiveFolderPath  + Filename, ErrorFolderPath  + Filename);  
                }
            }
        }
        catch (Exception ex)
        {
            //SaveandArchiveFile(new PhaxioOperationResult(false, ex.ToString()), SourceFolderPath + FileName, DestinationFolderPath, Row.FaxKey);
            ex.ToString();
        }

    }

    //public void UpdateStatusandArchiveFile(PhaxioOperationResult PhaxioResult, string SourceFilePath, string DestinationFolderPath, long FaxKey, string DestinationFilePath)
    //{
    //    string faxStatus = "Error";
    //    string faxSendInd = "N";

    //    if (PhaxioResult.Success == true)
    //    {
    //        faxStatus = PhaxioResult.Message;
    //        faxSendInd = "Y";
    //    }

    //    sqlCmd.Parameters["@LastStatus"].Value = PhaxioResult.Message;
    //    sqlCmd.Parameters["@ResponseMessage"].Value = PhaxioResult.Message;
    //    sqlCmd.Parameters["@FaxKey"].Value = FaxKey;
    //    sqlCmd.Parameters["@FaxSendInd"].Value = faxSendInd;

    //    //sqlCmd.ExecuteNonQuery();

    //    //if (!Directory.Exists(DestinationFolderPath))
    //    //    Directory.CreateDirectory(DestinationFolderPath);
    //    //if (File.Exists(DestinationFilePath))
    //    //    File.Delete(DestinationFilePath);
    //    //File.Move(SourceFilePath, DestinationFilePath);

    //}

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[PhaxioAPI.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Collections.Specialized;
using System.IO;
using System.Net;
using System.Security.Cryptography;
using System.Web.Script.Serialization;
//using System.Dynamic;
//using System.Collections.ObjectModel;
using Microsoft.CSharp.RuntimeBinder;

namespace Phaxio
{
    public class PhaxioAPI
    {
        private bool debug = false;
        private string api_key;
        private string api_secret;
        private string host;

        public PhaxioAPI() { }

        public PhaxioAPI(string apiKey, string apiSecret, string hostURL = "https://api.phaxio.com/v1/")
        {
            api_key = apiKey;
            api_secret = apiSecret;
            host = hostURL;
        }

        public PhaxioOperationResult faxStatus(int faxId)
        {
            if (faxId == 0)
                return new PhaxioOperationResult(false, "A valid fax id is required.");
            NameValueCollection parameters = new NameValueCollection();
            parameters.Add("id", faxId.ToString());
            return doRequest(host + "faxStatus", parameters);
        }

        public PhaxioOperationResult sendFax(string address, NameValueCollection parameters)
        {
            if ((parameters["fax[to_number]"] == null) || (parameters["fax[to_number]"].Length == 0))
                return new PhaxioOperationResult(false, "You must include a 'to fax number' number.");

            if (parameters["fax[filename]"] == null && (parameters["fax[filename]"].Length == 0))
                return new PhaxioOperationResult(false, "You must include a file.");

            if (parameters["fax[filename]"] != null)
                if (!File.Exists(parameters["fax[filename]"]))
                {
                    return new PhaxioOperationResult(false, System.String.Format("The file '{0}' does not exist.", parameters["fax[filename]"]));
                }

            return doRequest(address, parameters); //Changed
        }

        //public PhaxioOperationResult sendFax(string[] to, string[] filenames, Dictionary<string, string> options)
        //{
        //    if ((to == null) || (to.Length == 0))
        //        return new PhaxioOperationResult(false, "You must include a 'to' number.");

        //    if (filenames == null && !options.ContainsKey("string_data"))
        //        return new PhaxioOperationResult(false, "You must include a file.");

        //    NameValueCollection parameters = new NameValueCollection();

        //    for (int i = 0; i < to.Length; i++)
        //    {
        //        parameters.Add(System.String.Format("to[{0}]", i), to[i]);
        //    }
        //    if (filenames != null)
        //        for (int i = 0; i < filenames.Length; i++)
        //        {
        //            if (!File.Exists(@filenames[i]))
        //            {
        //                return new PhaxioOperationResult(false, System.String.Format("The file '{0}' does not exist.", filenames[i]));
        //            }
        //            parameters.Add(System.String.Format("filename[{0}]", i), filenames[i]);
        //        }
        //    string[] validOptionNames = new string[]{
        //        "string_data",
        //        "string_data_type",
        //        "batch",
        //        "batch_delay",
        //        "batch_collision!avoidance",
        //        "callback_url",
        //        "cancel_timeout",
        //        "caller_id"};
        //    copyValidOptionsToParameters(validOptionNames, options, parameters);

        //    return doRequest(host, parameters); //Changed
        //}

        //public PhaxioOperationResult fireBatch(int batchId){
        //    if(batchId==0)
        //        return new PhaxioOperationResult(false, "You need to include a batch Id.");
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("id",batchId.ToString());
        //    return doRequest(host+"fireBatch",parameters);
        //}

        //public PhaxioOperationResult closeBatch(int batchId){
        //    if(batchId==0)
        //        return new PhaxioOperationResult(false, "You need to include a batch Id.");
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("id",batchId.ToString());
        //    return doRequest(host+"closeBatch",parameters);
        //}

        //public string getApiKey()
        //{
        //    return api_key;
        //}

        //public string getApiSecret()
        //{
        //    return api_secret;
        //}

        //public PhaxioOperationResult provisionNumber(int areaCode, string callbackURL = "")
        //{
        //    if (areaCode == 0)
        //        return new PhaxioOperationResult(false, "Area Code is required.");
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("area_code", areaCode.ToString());
        //    if (callbackURL != "")
        //    {
        //        parameters.Add("callback_url", callbackURL);
        //    }
        //    return doRequest(host + "provisionNumber", parameters);
        //}

        //public PhaxioOperationResult releaseNumber(string number)
        //{
        //    if (number == "")
        //    {
        //        return new PhaxioOperationResult(false, "A fax number is required.");
        //    }
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("number", number);
        //    return doRequest(host + "releaseNumber", parameters);
        //}

        //public PhaxioOperationResult numberList(Dictionary<string, string> options = null)
        //{
        //    NameValueCollection parameters = new NameValueCollection();
        //    if (options != null)
        //    {
        //        copyValidOptionsToParameters(new string[] { "area_code", "number" }, options, parameters);
        //    }
        //    return doRequest(host + "numberList", parameters);
        //}

        //public PhaxioOperationResult accountStatus()
        //{
        //    NameValueCollection parameters = new NameValueCollection();
        //    return doRequest(host + "accountStatus", parameters);
        //}

        //public PhaxioOperationResult testReceive(string filename, Dictionary<string, string> options = null)
        //{
        //    if (filename == null || filename == "" || !File.Exists(@filename) || Path.GetExtension(filename) != ".pdf")
        //    {
        //        return new PhaxioOperationResult(false, "You must specify a valid pdf file.");
        //    }
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("filename", filename);
        //    if (options != null)
        //    {
        //        copyValidOptionsToParameters(new string[] { "from_number", "to_number" }, options, parameters);
        //    }
        //    return doRequest(host + "testReceive", parameters);
        //}

        //public PhaxioOperationResult attachPhaxCode(float x, float y, string filename, Dictionary<string, string> options = null)
        //{
        //    if (filename == null || filename == "" || !File.Exists(@filename) || Path.GetExtension(filename) != ".pdf")
        //    {
        //        return new PhaxioOperationResult(false, "You must specify a valid pdf file.");
        //    }
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("filename", filename);
        //    parameters.Add("x", x.ToString());
        //    parameters.Add("y", y.ToString());
        //    if (options != null)
        //    {
        //        copyValidOptionsToParameters(new string[] { "metadata", "page_number" }, options, parameters);
        //    }
        //    return doRequest(host + "attachPhaxCodeToPdf", parameters);
        //}

        //public PhaxioOperationResult createPhaxCode(Dictionary<string, string> options = null)
        //{
        //    NameValueCollection parameters = new NameValueCollection();
        //    if (options != null)
        //    {
        //        copyValidOptionsToParameters(new string[] { "metadata", "redirect" }, options, parameters);
        //    }
        //    return doRequest(host + "createPhaxCode", parameters);
        //}

        //public PhaxioOperationResult getHostedDocument(string name, string metadata = null)
        //{
        //    if (name == null || name == "")
        //    {
        //        return new PhaxioOperationResult(false, "You must include a document name.");
        //    }
        //    NameValueCollection parameters = new NameValueCollection();
        //    if (metadata != null || metadata != "")
        //    {
        //        parameters.Add("metadata", metadata);
        //    }
        //    return doRequest(host + "getHostedDocument", parameters);
        //}

        //public PhaxioOperationResult faxFile(int id, string type = "p")
        //{
        //    if (id == 0)
        //    {
        //        return new PhaxioOperationResult(false, "A fax id is required.");
        //    }
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("id", id.ToString());
        //    parameters.Add("type", type);
        //    return doRequest(host + "faxFile", parameters);
        //}

        //public PhaxioOperationResult faxList(string start, string end, Dictionary<string, string> options = null)
        //{
        //    if (start == null || start == "" || end == "" || end == null)
        //        return new PhaxioOperationResult(false, "Start and end timestamps are required.");
        //    NameValueCollection parameters = new NameValueCollection();
        //    parameters.Add("start", start);
        //    parameters.Add("end", end);
        //    if (options != null)
        //    {
        //        copyValidOptionsToParameters(new string[] { "page", "max_per_page" }, options, parameters);
        //    }
        //    return doRequest(host + "faxList", parameters);
        //}

        private PhaxioOperationResult doRequest(string address, NameValueCollection parameters)
        {
            //parameters.Add("api_key", api_key);
            //parameters.Add("api_secret", api_secret);
            //if (debug)
            //    Console.WriteLine("Request address: \n\n {0}?{1}", address, ToString(parameters));

            var response = createAndSendRequest(address, parameters);
            if (!response.Success)
            {
                //if (debug)
                //    Console.WriteLine("Failed in createAndSendRequest: \n\n{0}\n\n", response.Message);

                return response;
            }

            //if (debug)
            //    Console.WriteLine("Response message: \n\n{0}\n\n", response.Message);

            JavaScriptSerializer responsed = new JavaScriptSerializer();
            dynamic res;
            try
            {
                res = responsed.Deserialize<dynamic>(response.Message);
            }
            catch
            {
                return new PhaxioOperationResult(false, "No data received from service.");
            }

            //bool success = true;
            // Dictionary<string, object> data = null;
            //if (res.ContainsKey("success"))
            //    success = res["success"];
            //if (res.ContainsKey("message"))
            //    message = res["message"];
            //if (res.ContainsKey("data"))
            //    data = res["data"];

            string message = null;
            if (res.ContainsKey("status"))
                message = res["status"];

            return new PhaxioOperationResult(response.Success, message);
        }

        private string ToString(NameValueCollection source)
        {
            var str = new StringBuilder();
            foreach (KeyValuePair<string, string> kv in source)
                str.Append(string.Format("{0}{1}{2}{3}", kv.Key, '=', kv.Value, '&'));
            var retval = str.ToString();
            return retval.Substring(0, retval.Length - 1);
        }

        //private void copyValidOptionsToParameters(string[] validParameterNames, Dictionary<string, string> options, NameValueCollection parameters)
        //{
        //    foreach (string name in validParameterNames)
        //    {
        //        if (options.ContainsKey(name))
        //        {
        //            parameters.Add(name, options[name]);
        //        }
        //    }
        //}

        private PhaxioOperationResult createAndSendRequest(string url, NameValueCollection parameters)
        {
            string boundary = "---------------------------" + getSHA(DateTime.Now.Ticks.ToString("x"));
            byte[] boundarybytes = System.Text.Encoding.ASCII.GetBytes("\r\n--" + boundary + "\r\n");

            HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(url);
            webRequest.ContentType = "multipart/form-data; boundary=" + boundary;
            webRequest.Method = "POST";
            webRequest.KeepAlive = true;
            webRequest.Credentials = System.Net.CredentialCache.DefaultCredentials;

            Stream requestStream = webRequest.GetRequestStream();

            string formdataTemplate = "Content-Disposition: form-data; name=\"{0}\"\r\n\r\n{1}";
            string headerTemplate = "Content-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"\r\nContent-Type: application/octet-stream\r\n\r\n";
            foreach (string key in parameters.Keys)
            {
                requestStream.Write(boundarybytes, 0, boundarybytes.Length);
                if (key.Contains("filename")) //Changed
                {
                    string header = string.Format(headerTemplate, key, parameters[key]);
                    byte[] headerbytes = System.Text.Encoding.UTF8.GetBytes(header);
                    requestStream.Write(headerbytes, 0, headerbytes.Length);
                    FileStream fileStream = new FileStream(parameters[key], FileMode.Open, FileAccess.Read);
                    byte[] buffer = new byte[4096];
                    int bytesRead = 0;
                    while ((bytesRead = fileStream.Read(buffer, 0, buffer.Length)) != 0)
                    {
                        requestStream.Write(buffer, 0, bytesRead);
                    }
                    fileStream.Close();
                }
                else
                {

                    string formitem = string.Format(formdataTemplate, key, parameters[key]);
                    byte[] formitembytes = System.Text.Encoding.UTF8.GetBytes(formitem);
                    requestStream.Write(formitembytes, 0, formitembytes.Length);
                }
            }
            byte[] trailer = System.Text.Encoding.ASCII.GetBytes("\r\n--" + boundary + "--\r\n");
            requestStream.Write(trailer, 0, trailer.Length);
            requestStream.Close();

            WebResponse webResponse = null;
            try
            {
                webResponse = webRequest.GetResponse();
                Stream stream2 = webResponse.GetResponseStream();
                StreamReader reader2 = new StreamReader(stream2);
                string message = reader2.ReadToEnd();
                webResponse.Close();
                webResponse = null;
                webRequest = null;
                return new PhaxioOperationResult(true, message);
            }
            catch (Exception ex)
            {
                if (webResponse != null)
                {
                    webResponse.Close();
                    webResponse = null;
                }
                webRequest = null;
                return new PhaxioOperationResult(false, ex.ToString());
            }
        }

        private string getSHA(string data)
        {
            SHA1 temp = new SHA1CryptoServiceProvider();
            UnicodeEncoding UE = new UnicodeEncoding();
            byte[] hash = temp.ComputeHash(UE.GetBytes(data));
            string result = "";
            foreach (var b in hash)
                result += b.ToString("X2");
            return result;
        }

        public PhaxioOperationResult GetFaxStatus(string url)
        {

            HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(url);
            webRequest.KeepAlive = true;
            webRequest.Credentials = System.Net.CredentialCache.DefaultCredentials;

            WebResponse webResponse = null;
            try
            {
                webResponse = webRequest.GetResponse();
                Stream stream2 = webResponse.GetResponseStream();
                StreamReader reader2 = new StreamReader(stream2);
                string message = reader2.ReadToEnd();
                webResponse.Close();
                webResponse = null;
                webRequest = null;

                JavaScriptSerializer responsed = new JavaScriptSerializer();
                dynamic res;
                try
                {
                    res = responsed.Deserialize<dynamic>(message);
                }
                catch
                {
                    return new PhaxioOperationResult(false, "No data received from service.");
                }

                string sresMessage = "";
                string sStatus = "";
                string sErrorCode = "";
                string sErrorType = "";

                if (res.ContainsKey("message"))
                    sresMessage = CheckNullString(res["message"]);

                if (res.ContainsKey("status"))
                    sStatus = CheckNullString(res["status"]);

                if (res.ContainsKey("error_code"))
                    sErrorCode = CheckNullString(res["error_code"]);

                if (res.ContainsKey("error_type"))
                    sErrorType = CheckNullString(res["error_type"]);

                object[] objRecipients = null;
                dynamic dynRecipients = null;

                if (res.ContainsKey("recipients"))
                {
                    objRecipients = res["recipients"];
                    if (objRecipients.Count() != 0)
                    {
                        dynRecipients = objRecipients[0];

                        if (dynRecipients.ContainsKey("error_code"))
                            sErrorCode = sErrorCode + CheckNullString(dynRecipients["error_code"]);

                        if (dynRecipients.ContainsKey("error_type"))
                            sErrorType = sErrorType + CheckNullString(dynRecipients["error_type"]);
                    }
                }

                Dictionary<string, object> resdata = new Dictionary<string, object>();
                resdata.Add("status", sStatus.Trim());
                resdata.Add("error_code", sErrorCode.Trim());
                resdata.Add("error_type", sErrorType.Trim());

                return new PhaxioOperationResult(true, sresMessage, resdata);
            }
            catch (Exception ex)
            {
                if (webResponse != null)
                {
                    webResponse.Close();
                    webResponse = null;
                }
                webRequest = null;
                return new PhaxioOperationResult(false, ex.ToString());
            }
        }

        private string CheckNullString(object Value)
        {
            string strValue = "";
            if (Value != null)
                strValue = Value.ToString();

            return strValue;
        }

    }

    public class PhaxioOperationResult
    {
        public PhaxioOperationResult(bool success, string message, Dictionary<string, object> data = null)
        {
            Success = success;
            Message = message;
            Data = data;
        }

        public bool Success { get; set; }

        public string Message { get; set; }

        public Dictionary<string, object> Data { get; set; }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9a5698b569d546cb8e212af1c399891a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{305B8FB3-AF96-4437-9C10-B71D1A50EC0E}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_9a5698b569d546cb8e212af1c399891a</RootNamespace><AssemblyName>SC_7B68EE6F0B804AD39C995D5E8CBDBC2A</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'"><DebugSymbols>true</DebugSymbols><OutputPath>bin\x86\Debug\</OutputPath><DefineConstants>DEBUG;TRACE</DefineConstants><DebugType>full</DebugType><PlatformTarget>x86</PlatformTarget><ErrorReport>prompt</ErrorReport></PropertyGroup><PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'"><OutputPath>bin\x86\Release\</OutputPath><DefineConstants>TRACE</DefineConstants><Optimize>true</Optimize><PlatformTarget>x86</PlatformTarget><ErrorReport>prompt</ErrorReport></PropertyGroup><ItemGroup><Reference Include="Microsoft.CSharp" /><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Web" /><Reference Include="System.Web.Extensions" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="PhaxioAPI.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9a5698b569d546cb8e212af1c399891a.Properties.Settings.get_Default():SC_9a5698b569d546cb8e212af1c399891a.Properties.Sett" +
    "ings")]

namespace SC_9a5698b569d546cb8e212af1c399891a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 scmrmADO
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"scmrmADO").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String errorFolder
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["errorFolder"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FaximinionGet
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FaximinionGet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FaximinionKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FaximinionKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String sentFolder
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["sentFolder"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String sourceFolder
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["sourceFolder"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String fileName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool fileName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String providerNPI
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool providerNPI_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public DateTime campaignCreateDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[2]);
        }
    }
    public bool campaignCreateDate_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String recipientFaxNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool recipientFaxNumber_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String senderFaxNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool senderFaxNumber_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String faxSentIndicator
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool faxSentIndicator_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime faxStatusUpdateDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool faxStatusUpdateDate_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String currentFaxStatus
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool currentFaxStatus_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String faxStatusDetail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool faxStatusDetail_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String errorCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool errorCode_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String errorType
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool errorType_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public Int32 pmdClientID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[11]);
        }
    }
    public bool pmdClientID_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public Int32 mrmBatchFaxPDFID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[12]);
        }
    }
    public bool mrmBatchFaxPDFID_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public DateTime faxSentToFaximinionDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[13]);
        }
    }
    public bool faxSentToFaximinionDate_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_9a5698b569d546cb8e212af1c399891a</msb:CodeName>
		<msb:DisplayName>SC_9a5698b569d546cb8e212af1c399891a</msb:DisplayName>
		<msb:ProjectId>{F3E9947A-1F93-43A8-981C-BCF02B22C81C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_9a5698b569d546cb8e212af1c399891a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="PhaxioAPI.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9a5698b569d546cb8e212af1c399891a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9a5698b569d546cb8e212af1c399891a")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9a5698b569d546cb8e212af1c399891a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9a5698b569d546cb8e212af1c399891a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9a5698b569d546cb8e212af1c399891a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9a5698b569d546cb8e212af1c399891a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9a5698b569d546cb8e212af1c399891a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7B68EE6F0B804AD39C995D5E8CBDBC2A.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
CihLAAAKgDoAAAR+OgAABHtMAAAKfjoAAAQRDHJcAwBwb00AAApvfgAACm+GAAAKb1MAAAoTCnOH
AAAKEw0RDXI4AwBwEQhviAAACm+JAAAKEQ1yRgMAcBEJb4gAAApviQAAChENclwDAHARCm+IAAAK
b4kAAAoXEQcRDXM8AAAGEw/eIRMOBywIB293AAAKFAsUChYRDm8kAAAKFHM8AAAGEw/eABEPKgAA
AEE0AAAAAAAATgAAAA0AAABbAAAAFAAAAAMAAAEAAAAAIAAAANkMAAD5DAAAIQAAACgAAAETMAEA
EgAAAAEAABFyuQcAcAoDLAcDbyQAAAoKBipyAig1AAAKAgMoPgAABgIEKEAAAAYCBShCAAAGKh4C
ew0AAAQqIgIDfQ0AAAQqHgJ7DgAABCoiAgN9DgAABCoeAnsPAAAEKiICA30PAAAEKh4CKDUAAAoq
AAATMAIALQAAAAkAABF+EAAABC0gcgcIAHDQCQAAAihFAAAKb4wAAApzjQAACgoGgBAAAAR+EAAA
BCoafhEAAAQqHgKAEQAABCoafhIAAAQqLnNIAAAGgBIAAAQqHgIojwAACioAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACkEAAAI34AABARAADYFwAA
I1N0cmluZ3MAAAAA6CgAAHwIAAAjVVMAZDEAABAAAAAjR1VJRAAAAHQxAAC0BgAAI0Jsb2IAAAAA
AAAAAgAAAVcdogkJCwAAAPolMwAWAAABAAAAXAAAAAwAAAA6AAAASQAAACIAAACPAAAAAgAAABoA
AAAJAAAABgAAACgAAAAsAAAADwAAAAEAAAAKAAAAAQAAAAIAAAACAAAAAAAKAAEAAAAAAAYAFQH0
AAYAJQH0AAoAQgE7AQ4AXgFJARIAnQH0AAYArAH0ABYAPQIVAhoAgAJqAhoAlgJqAhoAqAJqAgoA
QwM7AQ4AtQiWCAoAOAkdCQoA9QnkCQoAJgoRCgoAYwtJCwoAjgt8CwoApQt8CwoAwgt8CwoA4Qt8
CwoA+gt8CwoAEwx8CwoALgx8CwoASQx8CwoAYgx8CwoAmwx7DAoAuwx7DAoA/Qw7AQoABA07AQYA
LQ30ABoAeA1eAhoAgg1qAgoAsw07ARoA3A3JDQoA+A07ARoA/w3JDQoALw4lDgoAQA4lDgoAXg4l
DgoAbw47AR4A9A7LDh4AIw/LDh4AZg/LDhYAsA8VAhYA1w8VAgcA5w8AABYAFxAVAiIAdxB7DAoA
ghA7ASIAiRB7DAoAnRA7ASYA+xDbEAoAHBE7AQoAIRE7ASoAdRFWESoAiBFWESoApxFWESIArhF7
DCoAvRFWESIA5xHPEQoA9hEdCQoASxI/Eg4AWRKWCAoAhRJyEgoAqxIdCQoAwhI7AQoA4RI7AQoA
ERM7AQoAFxM/Eg4APhMzEw4ASRMzEw4AgRMzEw4AkRMzEwoAxRMlDv8A3RMAAAoADRQlDgoAGBQl
DgoAIRQlDgoALBQ7AQ4APBQzEwoAZhQlDgoAcxQlDgoApRSIFAoAvxQ/EgoAzxSIFAoA6RSIFCIA
wBa0FgoA5hZ7DAoAFBcBFwoAMRd8Cw4AXRdHFw4AdhdHFwAAAAABAAAAAAABAAEAAQAQADIAAAAF
AAEAAQABABAAQAAAAAgAAwAFAAEAEABLAAAACQAHAAsAAQAQAFgAAAANAAcAKgABABAAZAAAAA0A
CAAsAAEAEABuAHgADQAJADIAAQAQAH8AeAANAA0APAAAABAAlQCfAA0AEABDAAABEADOAJ8AEQAS
AEcAgwEQAE4QAAANABMASgCDARAA7hQAAA0AFwBKAAYAWAATAAYAZAAXAAEAVgIvAAEAjgIzAAEA
oQI3AAEAtQI7AAEAtAdwAAEAtAdwAAEAbgiEAAEAdAiHAAEAfAiHAAEAhwiHAAEAhwmEAAEAoAmH
AAEAuQneABEABQrvABEAMgrzABEAdgoRARYAkhBOAhYApBBfAhYArxBxAhYAuhBfAhYADhVOAhYA
GRVfAhYAJBVxAhYALxWUBBYAOhVfAhYARRVOAhYAUBVfAhYAWxVxAhYAZhWUBBYAcRVfAhYAfBVO
AhYAiBVfAhYAlBVxAhYAoBWUBBYArBVfAhYAuBVOAhYAxBVfAhYA0BVxAhYA3BWUBBYA6BVfAhYA
9BVOAhYAABZfAhYADBanBBYAGBZfAhYAJBZOAhYAMBZfAhYAPBZxAhYASBa5BBYAVBaUBBYAYBZf
AhYAbBZOAhYAeBZfAhYAhBZxAhYAkBa5BBYAnBaUBBYAqBZfAlAgAAAAAIYYdgEbAAEAcCAAAAAA
xgC6AR8AAQCVIAAAAADGAccBKQAFAKggAAAAAMYB2wEpAAYAqiAAAAAAxgC+Aj8ABwDUIAAAAADG
ANECGwAIAOggAAAAAMYA5AIbAAgARCIAAAAAxgDvAhsACABMIgAAAADGANsBKQAIAPAkAAAAAIYY
dgEbAAkA+CQAAAAAhhh2AUQACQADJQAAAACGCPsCTgAMABglAAAAAIYICANSAAwAISUAAAAAhggc
A04ADAA2JQAAAACGCCwDUgAMAD8lAAAAAIYITANWAAwAVCUAAAAAhghjA1IADABdJQAAAACGCIED
TgAMAHIlAAAAAIYImANSAAwAeyUAAAAAhgi2A04ADACQJQAAAACGCMoDUgAMAJklAAAAAIYI5QNO
AAwAriUAAAAAhgj6A1IADAC3JQAAAACGCBYEVgAMAMwlAAAAAIYILgRSAAwA1SUAAAAAhghNBE4A
DADqJQAAAACGCGIEUgAMAPMlAAAAAIYIfgROAAwACCYAAAAAhgiSBFIADAARJgAAAACGCK0ETgAM
ACcmAAAAAIYIuwRSAAwAMSYAAAAAhgjQBE4ADABHJgAAAACGCN4EUgAMAFEmAAAAAIYI8wRbAAwA
ZyYAAAAAhggDBVIADABxJgAAAACGCBoFWwAMAIcmAAAAAIYILwVSAAwAkSYAAAAAhghLBVYADACn
JgAAAACGCGcFUgAMALEmAAAAAIYAigVSAAwAuSYAAAAAhgCSBVIADADBJgAAAACGGHYBdAAMANAm
AAAAAIYIxAd6AA0A8SYAAAAAhhh2AXQADQAAJwAAAACGCNoHTgAOACYnAAAAAIYI6gdOAA4ATCcA
AAAAhgj8B04ADgByJwAAAACGCA4ITgAOAJgnAAAAAIYIHQhOAA4AvicAAAAAhhh2ARsADgDGJwAA
AACGGHYBigAOAOQnAAAAAIYAjAiRABEAMCgAAAAAhgDJCJcAEgDcKAAAAACBANEIlwAUAJQqAAAA
AIEA2wifABYASCsAAAAAgQDkCJcAFwCgLQAAAACBAPkIpQAZAAAuAAAAAIYAAAmqABoAYDsAAAAA
gQANCbAAGwB+OwAAAACGGHYBtQAcAJs7AAAAAIYIRQlSAB8AozsAAAAAhghRCcEAHwCsOwAAAACG
CF0JTgAgALQ7AAAAAIYIaQnGACAAvTsAAAAAhgh1CcsAIQDFOwAAAACGCH4J1AAhAM47AAAAAIMY
dgEbACIA2DsAAAAAkwhCCvcAIgARPAAAAACTCFYK/AAiABg8AAAAAJMIYgoBASIAIDwAAAAAlgiG
ChUBIwAzPAAAAACGGHYBGwAjACc8AAAAAJEYixf5BSMAAAABAJoKAAACAKIKAAADAKwKAAAEALMK
AAABAKwKAAABAL0KAAABAMEKAAABAL0KAAABAKwKAAACAM0KAAADALMKAAABAOEKAAABAOEKAAAB
AOsKAAACAPIKEBADAPwKAAABAAQLAAABAAoLAAACABILAAABAAoLAAACABILAAABAB0LAAABACQL
AAACABILAAABACgLAAABACQLAAABAC0LAAABADMLAAACADsLEBADACgLAAABAEMLAAABAEMLAAAB
AEMLAAABAEMLgQB2AcYAiQB2AcYAkQB2AcYAmQB2AcYAoQB2AcYAqQB2AcYAsQB2AcYAuQB2AcYA
wQB2AcYAyQB2AcYA0QB2AVkB2QB2ARsACQB2ARsA4QAVDV4BCQAcDWUB8QB2ARsAOQBUDXABOQBm
DT8ACQDkAhsASQB2AXUBUQB2AXwBSQCZDYMBAQGoDYkBUQB2AZABCQDvAhsA4QCsDZwBWQDbCKUA
CQHbCE4A4QC5DaIBAQHADakBEQHoDT8ADADADbYB4QDyDYcAGQEtC70BIQEJDlsAGQDbCE4A4QAZ
DsIBKQE5DsgBKQFODs0BOQE5DsgBOQFjDtQBOQFqDtkBEQB2AUQAEQCsCvMBEQDNCvcBKQB5DvsB
EQCDDgACKQCKDgUCKQCSDgUCKQCeDgsCEQCKBVIAEQCSBVIAGQB2ARsACQANDxACSQFGDxYCUQF/
DxwCWQGaD3oACQDBDyMCYQHADSkCCQACEDACaQEvEDYCYQB2ARsAYQCoDT0CYQDADaUA4QBDEFsA
4QC5DUgCoQF2ARsAoQEQEYsCqQEzEZYCuQGgEagCyQEEErICFACgEdkCFAATEuYCyQEaEuoCHACg
EdkCHAATEuYCJAAnEiQDLAAnEjoDyQEuEkMDNACgEdkCNAATEuYCyQE2EmIDPAAnEjoD8QF2ARsA
+QGREpkDAQKfEp8DRAC6EqsDRADHErAD4QC5DbUD8QHRErwDAQLYElIAGQLtEhsA4QD1EsMDWQD/
Et8DWQAHE+QDIQLbCKUAKQIgE+gD4QCsDe4DKQIqE/UDMQKgEfsDMQJYE8YAMQJoE8YAOQJzE8EA
QQKeEwIEMQK1EwgEMQLMEw8E+QHsExUEWQKREpkDUQL1ExsE4QD7EyMEKQIEFOgDYQJ2ASgEUQIx
FDMEUQI2FBsAMQJIFDsEgQJUFA8EiQJ2AUEEkQJ+FE4AgQI2FBsAmQJ2ARsAoQJ2ARsAqQLdFH0E
eQLbCKUATACgEdkCTAATEuYCVAAnEiQDZACgEdkCZAATEuYCbAAnEjoDuQLLFgoFyQHRFrICdACg
EdkCdAATEuYCfAAnEiQDDAB2ARsA4QDhFk4ADACoDTMFwQJ2ARsAyQJ2ARsAqQE6F9YFcQB2AdwF
2QJ2AekFIQB2ARsADgBBAB8BEgB5AFQBLgBjAJQGLgAjAG4GLgALAP0FLgATAEUGLgAbAG4GLgAz
AEUGLgArAG4GLgA7AHQGLgBDAG4GLgBbAIsGYwCDAGsBIwFbBGsBYwFTBGsBgwFTBGsBoQFTBGsB
wQFTBGsB4QFTBGsBQQJTBGsByQRzBPAF6QRzBPAFoAdTBGsBwAdTBGsB4AdTBGsBAAhTBGsBIAhT
BGsBQAhTBGsBmAHfAUMCgQPJA0gEhAQ7BeQFBAABAAUAHQAGAB4ACAAjAAkAJgAKACgAAACeBV8A
AACnBWMAAAC3BV8AAADDBWMAAADWBWcAAADpBWMAAAADBl8AAAAWBmMAAAAwBl8AAABABmMAAABX
Bl8AAABoBmMAAACABmcAAACUBmMAAACvBl8AAADABmMAAADYBl8AAADoBmMAAAD/Bl8AAAAJB2MA
AAAaB18AAAAkB2MAAAA1B2wAAABBB2MAAABUB2wAAABlB2MAAAB9B2cAAACVB2MAAADRB38AAAAu
CF8AAAA6CF8AAABICF8AAABWCF8AAABhCF8AAADPCWMAAADXCV8AAADfCeYAAAD1CQcBAABuCgwB
AACSChoBAgAMAAMAAgANAAUAAgAOAAcAAgAPAAkAAgAQAAsAAgARAA0AAgASAA8AAgATABEAAgAU
ABMAAgAVABUAAgAWABcAAgAXABkAAgAYABsAAgAZAB0AAgAaAB8AAgAbACEAAgAcACMAAgAdACUA
AgAeACcAAgAfACkAAgAgACsAAgAhAC0AAgAiAC8AAgAjADEAAgAkADMAAgAlADUAAgAmADcAAgAn
ADkAAgArADsAAgAtAD0AAgAuAD8AAgAvAEEAAgAwAEMAAgAxAEUAAQA+AEcAAgA9AEcAAgA/AEkA
AQBAAEkAAgBBAEsAAQBCAEsAAgBEAE0AAgBFAE8AAQBGAE8AAgBHAFEArwHJAgcDGAMvA1IDdgOj
A8sE3QTqBO0E/gQWBScFBIAAAAEAAABlGX9eAAAAAAAA2QwAAAwAAAAAAAAAAAAAAAEA1wAAAAAA
BAAAAAAAAAAAAAAACgAyAQAAAAAEAAAAAAAAAAAAAAAKADsBAAAAAAwAAAAAAAAAAAAAAAEAfAEA
AAAADAAAAAAAAAAAAAAAAQDyAQAAAAAEAAAAAAAAAAAAAAAKAF4CAAAAAAwAAAAAAAAAAAAAAAEA
pw4AAAAABAAAAAAAAAAAAAAACgBrEAAAAAAEAAAAAAAAAAAAAACCAsUQAAAAAAQAAAAAAAAAAAAA
AJ8CRREAAAAAAAAAAAEAAACSFwAACwAHAAwABwCJAJICBQGSAgAAAAAAPE1vZHVsZT4AU0NfN0I2
OEVFNkYwQjgwNEFEMzlDOTk1RDVFOENCREJDMkEuZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0TWFp
bgBJbnB1dDBCdWZmZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFBoYXhpb0FQSQBQaGF4aW8AUGhh
eGlvT3BlcmF0aW9uUmVzdWx0AFJlc291cmNlcwBTQ185YTU2OThiNTY5ZDU0NmNiOGUyMTJhZjFj
Mzk5ODkxYS5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1
ZmZlcgBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAC5jdG9yAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBp
cGVsaW5lQnVmZmVyAE91dHB1dE5hbWVNYXAAUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlv
bk1hbmFnZXIxMDAAY29ubk1ncgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBzcWxDb25uAFNxbENvbW1hbmQAc3FsQ21kAFNxbFBhcmFtZXRlcgBzcWxQYXJh
bQBBY3F1aXJlQ29ubmVjdGlvbnMAUmVsZWFzZUNvbm5lY3Rpb25zAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAZ2V0X2ZpbGVOYW1lAGdldF9maWxlTmFtZV9Jc051bGwAZ2V0X3Byb3ZpZGVyTlBJAGdl
dF9wcm92aWRlck5QSV9Jc051bGwARGF0ZVRpbWUAZ2V0X2NhbXBhaWduQ3JlYXRlRGF0ZQBnZXRf
Y2FtcGFpZ25DcmVhdGVEYXRlX0lzTnVsbABnZXRfcmVjaXBpZW50RmF4TnVtYmVyAGdldF9yZWNp
cGllbnRGYXhOdW1iZXJfSXNOdWxsAGdldF9zZW5kZXJGYXhOdW1iZXIAZ2V0X3NlbmRlckZheE51
bWJlcl9Jc051bGwAZ2V0X2ZheFNlbnRJbmRpY2F0b3IAZ2V0X2ZheFNlbnRJbmRpY2F0b3JfSXNO
dWxsAGdldF9mYXhTdGF0dXNVcGRhdGVEYXRlAGdldF9mYXhTdGF0dXNVcGRhdGVEYXRlX0lzTnVs
bABnZXRfY3VycmVudEZheFN0YXR1cwBnZXRfY3VycmVudEZheFN0YXR1c19Jc051bGwAZ2V0X2Zh
eFN0YXR1c0RldGFpbABnZXRfZmF4U3RhdHVzRGV0YWlsX0lzTnVsbABnZXRfZXJyb3JDb2RlAGdl
dF9lcnJvckNvZGVfSXNOdWxsAGdldF9lcnJvclR5cGUAZ2V0X2Vycm9yVHlwZV9Jc051bGwAZ2V0
X3BtZENsaWVudElEAGdldF9wbWRDbGllbnRJRF9Jc051bGwAZ2V0X21ybUJhdGNoRmF4UERGSUQA
Z2V0X21ybUJhdGNoRmF4UERGSURfSXNOdWxsAGdldF9mYXhTZW50VG9GYXhpbWluaW9uRGF0ZQBn
ZXRfZmF4U2VudFRvRmF4aW1pbmlvbkRhdGVfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQAZmls
ZU5hbWUAZmlsZU5hbWVfSXNOdWxsAHByb3ZpZGVyTlBJAHByb3ZpZGVyTlBJX0lzTnVsbABjYW1w
YWlnbkNyZWF0ZURhdGUAY2FtcGFpZ25DcmVhdGVEYXRlX0lzTnVsbAByZWNpcGllbnRGYXhOdW1i
ZXIAcmVjaXBpZW50RmF4TnVtYmVyX0lzTnVsbABzZW5kZXJGYXhOdW1iZXIAc2VuZGVyRmF4TnVt
YmVyX0lzTnVsbABmYXhTZW50SW5kaWNhdG9yAGZheFNlbnRJbmRpY2F0b3JfSXNOdWxsAGZheFN0
YXR1c1VwZGF0ZURhdGUAZmF4U3RhdHVzVXBkYXRlRGF0ZV9Jc051bGwAY3VycmVudEZheFN0YXR1
cwBjdXJyZW50RmF4U3RhdHVzX0lzTnVsbABmYXhTdGF0dXNEZXRhaWwAZmF4U3RhdHVzRGV0YWls
X0lzTnVsbABlcnJvckNvZGUAZXJyb3JDb2RlX0lzTnVsbABlcnJvclR5cGUAZXJyb3JUeXBlX0lz
TnVsbABwbWRDbGllbnRJRABwbWRDbGllbnRJRF9Jc051bGwAbXJtQmF0Y2hGYXhQREZJRABtcm1C
YXRjaEZheFBERklEX0lzTnVsbABmYXhTZW50VG9GYXhpbWluaW9uRGF0ZQBmYXhTZW50VG9GYXhp
bWluaW9uRGF0ZV9Jc051bGwAUGFyZW50Q29tcG9uZW50AGdldF9zY21ybUFETwBzY21ybUFETwBn
ZXRfZXJyb3JGb2xkZXIAZ2V0X0ZheGltaW5pb25HZXQAZ2V0X0ZheGltaW5pb25LZXkAZ2V0X3Nl
bnRGb2xkZXIAZ2V0X3NvdXJjZUZvbGRlcgBlcnJvckZvbGRlcgBGYXhpbWluaW9uR2V0AEZheGlt
aW5pb25LZXkAc2VudEZvbGRlcgBzb3VyY2VGb2xkZXIAZGVidWcAYXBpX2tleQBhcGlfc2VjcmV0
AGhvc3QAZmF4U3RhdHVzAFN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZABOYW1lVmFsdWVD
b2xsZWN0aW9uAHNlbmRGYXgAZG9SZXF1ZXN0AFRvU3RyaW5nAGNyZWF0ZUFuZFNlbmRSZXF1ZXN0
AGdldFNIQQBHZXRGYXhTdGF0dXMAQ2hlY2tOdWxsU3RyaW5nAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAERpY3Rpb25hcnlgMgBnZXRfU3VjY2VzcwBzZXRfU3VjY2VzcwBnZXRfTWVzc2FnZQBz
ZXRfTWVzc2FnZQBnZXRfRGF0YQBzZXRfRGF0YQA8U3VjY2Vzcz5rX19CYWNraW5nRmllbGQAPE1l
c3NhZ2U+a19fQmFja2luZ0ZpZWxkADxEYXRhPmtfX0JhY2tpbmdGaWVsZABTdWNjZXNzAE1lc3Nh
Z2UARGF0YQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNl
TWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBn
ZXRfRGVmYXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93
AFRyYW5zYWN0aW9uAEJ1ZmZlckNvbHVtbkluZGV4ZXMAQ29tcG9uZW50AGFwaUtleQBhcGlTZWNy
ZXQAaG9zdFVSTABmYXhJZABhZGRyZXNzAHBhcmFtZXRlcnMAc291cmNlAHVybABkYXRhAFZhbHVl
AHN1Y2Nlc3MAbWVzc2FnZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfN0I2OEVFNkYwQjgwNEFEMzlDOTk1RDVFOENCREJD
MkEAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFz
ZUNvbm5lY3Rpb24AU3FsRGJUeXBlAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRl
cnMAQWRkAENvbmNhdABJbnQzMgBGb3JtYXQAZ2V0X0l0ZW0AU3lzdGVtLkRhdGEuQ29tbW9uAERi
UGFyYW1ldGVyAHNldF9WYWx1ZQBFbXB0eQBEQk51bGwARGJDb21tYW5kAEV4ZWN1dGVOb25RdWVy
eQBvcF9FcXVhbGl0eQBTeXN0ZW0uSU8ARGlyZWN0b3J5AEV4aXN0cwBEaXJlY3RvcnlJbmZvAENy
ZWF0ZURpcmVjdG9yeQBGaWxlAERlbGV0ZQBNb3ZlAEV4Y2VwdGlvbgBHZXRTdHJpbmcASXNOdWxs
AEdldERhdGUAR2V0RGF0ZVRpbWUAR2V0SW50MzIATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29t
cG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAElEVFNSdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24xMDAAZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBJRFRTUnVu
dGltZUNvbm5lY3Rpb24xMDAAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZ2V0X0Nvbm5lY3Rp
b25NYW5hZ2VyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAElEVFNWYXJp
YWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJ
RFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhDb250ZXh0AGdldF9MZW5ndGgAPGRv
UmVxdWVzdD5vX19TaXRlQ29udGFpbmVyMABTeXN0ZW0uQ29yZQBDYWxsU2l0ZWAxAEZ1bmNgMwBD
YWxsU2l0ZQA8PnBfX1NpdGUxAEZ1bmNgNAA8PnBfX1NpdGUyADw+cF9fU2l0ZTMAPD5wX19TaXRl
NABTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBK
YXZhU2NyaXB0U2VyaWFsaXplcgBEZXNlcmlhbGl6ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5DU2hhcnAATWljcm9zb2Z0LkNTaGFycC5SdW50aW1l
QmluZGVyAENTaGFycEFyZ3VtZW50SW5mbwBDU2hhcnBBcmd1bWVudEluZm9GbGFncwBDcmVhdGUA
QmluZGVyAENhbGxTaXRlQmluZGVyAENTaGFycEJpbmRlckZsYWdzAFN5c3RlbS5MaW5xLkV4cHJl
c3Npb25zAEV4cHJlc3Npb25UeXBlAElFbnVtZXJhYmxlYDEAVW5hcnlPcGVyYXRpb24AVGFyZ2V0
AEludm9rZU1lbWJlcgBJbnZva2UAQ29udmVydABHZXRJbmRleABTeXN0ZW0uVGV4dABTdHJpbmdC
dWlsZGVyAE5hbWVPYmplY3RDb2xsZWN0aW9uQmFzZQBTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1l
cmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABLZXlWYWx1ZVBhaXJgMgBnZXRfS2V5AENo
YXIAZ2V0X1ZhbHVlAEFwcGVuZABNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAFN1YnN0cmlu
ZwBnZXRfTm93AGdldF9UaWNrcwBJbnQ2NABFbmNvZGluZwBnZXRfQVNDSUkAR2V0Qnl0ZXMAU3lz
dGVtLk5ldABXZWJSZXF1ZXN0AEh0dHBXZWJSZXF1ZXN0AHNldF9Db250ZW50VHlwZQBzZXRfTWV0
aG9kAHNldF9LZWVwQWxpdmUAQ3JlZGVudGlhbENhY2hlAElDcmVkZW50aWFscwBnZXRfRGVmYXVs
dENyZWRlbnRpYWxzAHNldF9DcmVkZW50aWFscwBTdHJlYW0AR2V0UmVxdWVzdFN0cmVhbQBLZXlz
Q29sbGVjdGlvbgBnZXRfS2V5cwBXcml0ZQBDb250YWlucwBnZXRfVVRGOABGaWxlU3RyZWFtAEZp
bGVNb2RlAEZpbGVBY2Nlc3MAQnl0ZQBSZWFkAENsb3NlAFdlYlJlc3BvbnNlAEdldFJlc3BvbnNl
AEdldFJlc3BvbnNlU3RyZWFtAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFJlYWRUb0VuZABTeXN0
ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5AFNIQTFDcnlwdG9TZXJ2aWNlUHJvdmlkZXIAVW5pY29k
ZUVuY29kaW5nAEhhc2hBbGdvcml0aG0AQ29tcHV0ZUhhc2gAU0hBMQA8R2V0RmF4U3RhdHVzPm9f
X1NpdGVDb250YWluZXI1ADw+cF9fU2l0ZTYAPD5wX19TaXRlNwA8PnBfX1NpdGU4ADw+cF9fU2l0
ZTkAPD5wX19TaXRlYQA8PnBfX1NpdGViADw+cF9fU2l0ZWMAPD5wX19TaXRlZAA8PnBfX1NpdGVl
ADw+cF9fU2l0ZWYAPD5wX19TaXRlMTAAPD5wX19TaXRlMTEAPD5wX19TaXRlMTIAPD5wX19TaXRl
MTMAPD5wX19TaXRlMTQAPD5wX19TaXRlMTUAPD5wX19TaXRlMTYAPD5wX19TaXRlMTcAPD5wX19T
aXRlMTgAPD5wX19TaXRlMTkAPD5wX19TaXRlMWEAPD5wX19TaXRlMWIAPD5wX19TaXRlMWMAPD5w
X19TaXRlMWQAPD5wX19TaXRlMWUAPD5wX19TaXRlMWYAPD5wX19TaXRlMjAAPD5wX19TaXRlMjEA
PD5wX19TaXRlMjIAPD5wX19TaXRlMjMAPD5wX19TaXRlMjQAPD5wX19TaXRlMjUAPD5wX19TaXRl
MjYAPD5wX19TaXRlMjcAPD5wX19TaXRlMjgAPD5wX19TaXRlMjkAU3lzdGVtLkxpbnEARW51bWVy
YWJsZQBDb3VudABCaW5hcnlPcGVyYXRpb24AVHJpbQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBBc3NlbWJs
eQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQAuY2N0b3IAU0NfOWE1Njk4YjU2OWQ1NDZjYjhlMjEy
YWYxYzM5OTg5MWEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0
ACAAMAAAgk91AHAAZABhAHQAZQAgAFsAZABiAG8AXQAuAFsAbQByAG0AQgBhAHQAYwBoAEYAYQB4
AFAARABGAHMAXQAgAHMAZQB0ACAAIABbAGYAYQB4AFMAZQBuAHQASQBuAGQAaQBjAGEAdABvAHIA
XQAgAD0AIABAAEYAYQB4AFMAZQBuAGQASQBuAGQALAAgAGYAYQB4AFMAdABhAHQAdQBzAFUAcABk
AGEAdABlAEQAYQB0AGUAIAA9ACAAZwBlAHQAZABhAHQAZQAoACkALAAgAFsAYwB1AHIAcgBlAG4A
dABGAGEAeABTAHQAYQB0AHUAcwBdAD0AIABAAEwAYQBzAHQAUwB0AGEAdAB1AHMALAAgAFsAZgBh
AHgAUwB0AGEAdAB1AHMARABlAHQAYQBpAGwAXQA9ACAAQABSAGUAcwBwAG8AbgBzAGUATQBlAHMA
cwBhAGcAZQAsACAARQByAHIAbwByAEMAbwBkAGUAIAA9ACAAQABFAHIAcgBvAHIAQwBvAGQAZQAs
ACAARQByAHIAbwByAFQAeQBwAGUAIAA9ACAAQABFAHIAcgBvAHIAVAB5AHAAZQAgAHcAaABlAHIA
ZQAgAFsAbQByAG0AQgBhAHQAYwBoAEYAYQB4AFAARABGAEkARABdACAAPQAgAEAAbQByAG0AQgBh
AHQAYwBoAEYAYQB4AFAARABGAEkARAAgAGEAbgBkACAAWwBwAHIAbwB2AGkAZABlAHIATgBQAEkA
XQA9AEAAcAByAG8AdgBpAGQAZQByAE4AUABJAAAjQABtAHIAbQBCAGEAdABjAGgARgBhAHgAUABE
AEYASQBEAAAXQABGAGEAeABTAGUAbgBkAEkAbgBkAAAXQABMAGEAcwB0AFMAdABhAHQAdQBzAAAh
QABSAGUAcwBwAG8AbgBzAGUATQBlAHMAcwBhAGcAZQAAFUAARQByAHIAbwByAEMAbwBkAGUAABVA
AEUAcgByAG8AcgBUAHkAcABlAAAZQABwAHIAbwB2AGkAZABlAHIATgBQAEkAAANcAAAReQB5AHkA
eQBtAG0ARABEAAADWQAADXMAdABhAHQAdQBzAAAVZQByAHIAbwByAF8AYwBvAGQAZQAAFWUAcgBy
AG8AcgBfAHQAeQBwAGUAAA9mAGEAaQBsAHUAcgBlAAARcwBjAG0AcgBtAEEARABPAAAXZQByAHIA
bwByAEYAbwBsAGQAZQByAAAbRgBhAHgAaQBtAGkAbgBpAG8AbgBHAGUAdAAAG0YAYQB4AGkAbQBp
AG4AaQBvAG4ASwBlAHkAABVzAGUAbgB0AEYAbwBsAGQAZQByAAAZcwBvAHUAcgBjAGUARgBvAGwA
ZABlAHIAADdBACAAdgBhAGwAaQBkACAAZgBhAHgAIABpAGQAIABpAHMAIAByAGUAcQB1AGkAcgBl
AGQALgAABWkAZAAAE2YAYQB4AFMAdABhAHQAdQBzAAAdZgBhAHgAWwB0AG8AXwBuAHUAbQBiAGUA
cgBdAABVWQBvAHUAIABtAHUAcwB0ACAAaQBuAGMAbAB1AGQAZQAgAGEAIAAnAHQAbwAgAGYAYQB4
ACAAbgB1AG0AYgBlAHIAJwAgAG4AdQBtAGIAZQByAC4AARtmAGEAeABbAGYAaQBsAGUAbgBhAG0A
ZQBdAAAxWQBvAHUAIABtAHUAcwB0ACAAaQBuAGMAbAB1AGQAZQAgAGEAIABmAGkAbABlAC4AAD1U
AGgAZQAgAGYAaQBsAGUAIAAnAHsAMAB9ACcAIABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQA
LgABPU4AbwAgAGQAYQB0AGEAIAByAGUAYwBlAGkAdgBlAGQAIABmAHIAbwBtACAAcwBlAHIAdgBp
AGMAZQAuAAAXQwBvAG4AdABhAGkAbgBzAEsAZQB5AAAZewAwAH0AewAxAH0AewAyAH0AewAzAH0A
ADctAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAB
A3gAAAkNAAoALQAtAAEFDQAKAAA9bQB1AGwAdABpAHAAYQByAHQALwBmAG8AcgBtAC0AZABhAHQA
YQA7ACAAYgBvAHUAbgBkAGEAcgB5AD0AAQlQAE8AUwBUAABjQwBvAG4AdABlAG4AdAAtAEQAaQBz
AHAAbwBzAGkAdABpAG8AbgA6ACAAZgBvAHIAbQAtAGQAYQB0AGEAOwAgAG4AYQBtAGUAPQAiAHsA
MAB9ACIADQAKAA0ACgB7ADEAfQABgM1DAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkA
bwBuADoAIABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAewAwAH0AIgA7ACAAZgBp
AGwAZQBuAGEAbQBlAD0AIgB7ADEAfQAiAA0ACgBDAG8AbgB0AGUAbgB0AC0AVAB5AHAAZQA6ACAA
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AbwBjAHQAZQB0AC0AcwB0AHIAZQBhAG0ADQAKAA0ACgAB
EWYAaQBsAGUAbgBhAG0AZQAACS0ALQANAAoAAQEABVgAMgAAD20AZQBzAHMAYQBnAGUAAB9DAGgA
ZQBjAGsATgB1AGwAbABTAHQAcgBpAG4AZwAAFXIAZQBjAGkAcABpAGUAbgB0AHMAAHFTAEMAXwA5
AGEANQA2ADkAOABiADUANgA5AGQANQA0ADYAYwBiADgAZQAyADEAMgBhAGYAMQBjADMAOQA5ADgA
OQAxAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAIsRHeyD
lBhGoIZvlOAeafEACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQES
EAMGEh0DBhIhAwYSJQMGEikEIAEBHAkgAwESFR0IEhkDIAAOAyAAAgQgABEtAyAACAMoAA4DKAAC
BCgAES0DKAAIAwYSBQUgAQESBQQgABIdBCgAEh0CBgICBg4GIAMBDg4OBSABEiAIByACEiAOEjEF
IAEOEjEEIAEODgUgARIgDgQgAQ4cCyADAQIOFRI1Ag4cBCABAQIEIAEBDgggABUSNQIOHAkgAQEV
EjUCDhwHBhUSNQIOHAgoABUSNQIOHAMGEjkDBhI9BAAAEjkEAAASPQUAAQESPQQIABI5BAgAEj0D
BhIoBAAAEigECAASKDRoAHQAdABwAHMAOgAvAC8AYQBwAGkALgBwAGgAYQB4AGkAbwAuAGMAbwBt
AC8AdgAxAC8ABAAAAAAEIAEBCAYgAgIOEXUFIAEdCAgEAQAAAAQgARwcBiACAQ4SIQYgAgEOEX0F
IAASgIEGIAESKRIpByADAQ4RfQgDBwEOBQACDg4OBgADDg4cHAUgARIpDgYVEjUCDhwGIAETARMA
BAYSgI0FAAICDg4EAAECDgYAARKAmQ4EAAEBDgUAAgEODhMHDA4ODg4ODhIcEiASgKERLQgIAwYS
FQMGHQgEIAEOCAQgAQIIBSABES0IBCABCAgFIAASgKUFIAASgKkGIAESgK0OBSAAEoCxBiABEoC1
HAUAABKAuQYgARwSgL0FIAIBDg4EBwESMQUAAg4OHBAGFRKAwQEVEoDFAxKAyRwCEQYVEoDBARUS
gM0EEoDJHA4cEAYVEoDBARUSgMUDEoDJHA4IMb84Vq02TjUGMAEBHgAOAwoBHAgAARKA1RGA2Qiw
P19/EdUKOgkAAhKA3RGA4Q4WAAQSgOkRgO0RgPESgNUVEoD1ARKA3Q8VEoDBARUSgMUDEoDJHAIM
AAEVEoDBARMAEoDpAwYTABwABRKA6RGA7Q4VEoD1ARKA1RKA1RUSgPUBEoDdEBUSgMEBFRKAzQQS
gMkcDhwLFRKAzQQSgMkcDhwKIAMTAxMAEwETAgoVEoDFAxKAyRwCCCACEwITABMBDgADEoDpEYDt
EoDVEoDVDxUSgMEBFRKAxQMSgMkcDhMAAxKA6RGA7RKA1RUSgPUBEoDdChUSgMUDEoDJHA4XBwgS
IBKA0RwOEiAdEoDdHRKA3R0SgN0FIAASgQEDIAAcBxURgQUCDg4EIAATAAQgABMBBgACDg4dHAYg
ARKA+Q4FIAIOCAgVBwYSgPkVEYEFAg4ODhKBAR0cEoENBAAAES0DIAAKBQAAEoEVBgADDg4ODgUg
AR0FDgYAARKBGQ4FAAASgSUGIAEBEoElBSAAEoEpBSAAEoEtByADAR0FCAgEIAECDgogAwEOEYE1
EYE5ByADCB0FCAgFIAASgUEGIAEBEoEpNAcZDh0FEoEdEoEpDg4ODh0FEoExHQUIDh0FHQUSgUES
gSkSgUUOEoChEiARLQoSgQESgQ0GIAEdBR0FDwcHEoFZEoFRHQUOBR0FCBIGFRKAwQEVEoDNBBKA
yRIcHBwRBhUSgMEBFRKAxQMSgMkcHRwRBhUSgMEBFRKAzQQSgMkOHBwRFRKAwQEVEoDNBBKAyRIc
HBwMFRKAzQQSgMkSHBwcAh0cEBUSgMEBFRKAxQMSgMkcHRwLFRKAxQMSgMkcHRwLEAEBCBUSgPUB
HgAQFRKAwQEVEoDNBBKAyQ4cHAsVEoDNBBKAyQ4cHAcgAgETABMBgJkHLRKBHRKBQRKBKRKBRQ4S
gNEcDg4ODh0cHBUSNQIOHBKAoRIgHRKA3R0SgN0dEoDdHRKA3R0SgN0dEoDdHRKA3R0SgN0dEoDd
HRKA3R0SgN0dEoDdHRKA3R0SgN0dEoDdHRKA3R0SgN0dEoDdHRKA3R0SgN0dEoDdHRKA3R0SgN0d
EoDdHRKA3R0SgN0dEoDdHRKA3R0SgN0FIAASgWkHIAIBDhKBaQQHARI5BiABARGBcQgBAAIAAAAA
AAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfOWE1Njk4YjU2OWQ1NDZjYjhlMjEyYWYxYzM5OTg5
MWEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQBIdQAAAAAAAAAAAABedQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
UHUAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAA
MAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBW
AEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAf15lGQAAAQB/XmUZPwAAAAAA
AAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAE
AAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwA
ZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkAYQA1ADYAOQA4AGIANQA2ADkAZAA1ADQANgBjAGIA
OABlADIAMQAyAGEAZgAxAGMAMwA5ADkAOAA5ADEAYQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBp
AG8AbgAAAAAAMQAuADAALgA2ADUAMAAxAC4AMgA0ADEAOQAxAAAAAABwACgAAQBJAG4AdABlAHIA
bgBhAGwATgBhAG0AZQAAAFMAQwBfADcAQgA2ADgARQBFADYARgAwAEIAOAAwADQAQQBEADMAOQBD
ADkAOQA1AEQANQBFADgAQwBCAEQAQgBDADIAQQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADcAQgA2ADgARQBFADYA
RgAwAEIAOAAwADQAQQBEADMAOQBDADkAOQA1AEQANQBFADgAQwBCAEQAQgBDADIAQQAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA5AGEANQA2ADkAOABiADUA
NgA5AGQANQA0ADYAYwBiADgAZQAyADEAMgBhAGYAMQBjADMAOQA5ADgAOQAxAGEAAABEAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAwADEALgAyADQAMQA5ADEA
AAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAw
ADEALgAyADQAMQA5ADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABwAAAMAAAAcDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7b68ee6f0b804ad39c995d5e8cbdbc2a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::errorFolder,User::FaximinionGet,User::FaximinionKey,User::sentFolder,User::sourceFolder</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">a32c60281d3b2e66f8be9c74083ca30c</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c6fa31cde45d9de09b419190ebd29b207cff6b5f</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Connections[scmrmADO]"
                  connectionManagerID="{669D81A8-C5A7-4844-AFB7-BC4B7D3B2BB7}:invalid"
                  connectionManagerRefId="{669D81A8-C5A7-4844-AFB7-BC4B7D3B2BB7}:invalid"
                  name="scmrmADO" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[fileName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="fileName"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[fileName]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[providerNPI]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="providerNPI"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[providerNPI]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[campaignCreateDate]"
                      cachedDataType="dbDate"
                      cachedName="campaignCreateDate"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[campaignCreateDate]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[recipientFaxNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="recipientFaxNumber"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[recipientFaxNumber]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[senderFaxNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="senderFaxNumber"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[senderFaxNumber]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[faxSentIndicator]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="faxSentIndicator"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxSentIndicator]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[faxStatusUpdateDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="faxStatusUpdateDate"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxStatusUpdateDate]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[currentFaxStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="currentFaxStatus"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[currentFaxStatus]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[faxStatusDetail]"
                      cachedDataType="wstr"
                      cachedLength="1000"
                      cachedName="faxStatusDetail"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxStatusDetail]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[errorCode]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="errorCode"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[errorCode]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[errorType]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1000"
                      cachedName="errorType"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[errorType]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[pmdClientID]"
                      cachedDataType="i4"
                      cachedName="pmdClientID"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[pmdClientID]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[mrmBatchFaxPDFID]"
                      cachedDataType="i4"
                      cachedName="mrmBatchFaxPDFID"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[mrmBatchFaxPDFID]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0].Columns[faxSentToFaximinionDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="faxSentToFaximinionDate"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[faxSentToFaximinionDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="update recipientFaxNumber in SCMRM"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec scmrm.dbo.updateMRMPDFsRecipientFaxFromStarsConnect ?,?,?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Connections[OleDbConnection]"
                  connectionManagerID="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  connectionManagerRefId="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].Columns[providerNPI]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="providerNPI"
                      externalMetadataColumnId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].ExternalColumns[@providerNPI]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[providerNPI]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].Columns[recipientFaxNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="recipientFaxNumber"
                      externalMetadataColumnId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].ExternalColumns[@recipientFaxnumber]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[recipientFaxNumber]" />
                    <inputColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].Columns[mrmBatchFaxPDFID]"
                      cachedDataType="i4"
                      cachedName="mrmBatchFaxPDFID"
                      externalMetadataColumnId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].ExternalColumns[@mrmBatchFaxPDFID]"
                      lineageId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output].Columns[mrmBatchFaxPDFID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].ExternalColumns[@providerNPI]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      name="@providerNPI">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].ExternalColumns[@recipientFaxnumber]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      name="@recipientFaxnumber">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input].ExternalColumns[@mrmBatchFaxPDFID]"
                      dataType="i4"
                      name="@mrmBatchFaxPDFID">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get fax status from faximinion.Paths[Multicast Output 1]"
              endId="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM.Inputs[OLE DB Command Input]"
              name="Multicast Output 1"
              startId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Get fax status from faximinion.Paths[Multicast Output 3]"
              endId="Package\Get fax status from faximinion\Update fax Status from Faximinion.Inputs[Input 0]"
              name="Multicast Output 3"
              startId="Package\Get fax status from faximinion\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Get fax status from faximinion.Paths[OLE DB Source Output]"
              endId="Package\Get fax status from faximinion\Multicast.Inputs[Multicast Input 1]"
              name="OLE DB Source Output"
              startId="Package\Get fax status from faximinion\Get all Fax which need status.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load BatchFax Sent to SCMRM Interventions"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{a3f3c345-fb8c-4f8e-8d76-0e1e76bdb26c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load BatchFax Sent to SCMRM Interventions"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{41920AF9-8DB7-4D45-A69E-694E95087E27}"
          SQLTask:SqlStatementSource="Declare @BatchFaxDate date = ?&#xA;  &#xA;--mrmBatchFax&#xA;INSERT  INTO dbo.interventions&#xA; ( InterventionTypeID&#xA; , CDE_DTP_ID&#xA; , PMD_Patient_ID&#xA; , PMD_Client_ID&#xA; , NPI&#xA; , InterventionDate&#xA; , Days_Wait&#xA; , Billable   &#xA; )&#xA;&#xA;SELECT DISTINCT&#xA; 4&#xA; , d.cdeDTPID&#xA; , d.pmdPatientID&#xA; , d.pmdClientID&#xA; , d.providerNPI&#xA; , f.faxSenttoFaximinionDate&#xA; , 0&#xA; , 1&#xA;FROM&#xA;SCMRM.dbo.mrmBatchFaxPDFs f&#xA;INNER JOIN SCMRM.dbo.mrmBatchFaxDTPs d ON f.mrmBatchFaxPDFID = d.mrmBatchFaxPDFID &#xA;WHERE f.faxSentIndicator = 'Y'&#xA;AND f.currentFaxStatus = 'success'&#xA;and cast(f.campaigncreatedate as date) = @BatchFaxDate&#xA;EXCEPT&#xA; (SELECT DISTINCT&#xA;  InterventionTypeID&#xA;  , CDE_DTP_ID&#xA;  , PMD_Patient_ID&#xA;  , PMD_Client_ID&#xA;  , NPI&#xA;  , InterventionDate&#xA;  , Days_Wait&#xA;  , Billable&#xA; FROM&#xA;  dbo.interventions&#xA; WHERE&#xA;  InterventionTypeID = 4)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::BatchFaxDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load BatchFaxStatus for Email Notification"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0B63E2DB-E1F9-4F11-8651-FB62C9DCFCBD}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load BatchFaxStatus for Email Notification"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="BatchFaxStatus Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[MRM_BatchFaxStatus]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Connections[OleDbConnection]"
                  connectionManagerID="{6311C9A2-D389-4B9C-B757-1A615A452B59}:invalid"
                  connectionManagerRefId="{6311C9A2-D389-4B9C-B757-1A615A452B59}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].Columns[pmdclientid]"
                      cachedDataType="i4"
                      cachedName="pmdclientid"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[pmdclientid]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[pmdclientid]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].Columns[currentFaxStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="currentFaxStatus"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[currentFaxStatus]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[currentFaxStatus]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].Columns[NPI]"
                      cachedDataType="i4"
                      cachedName="NPI"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[NPI]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[NPI]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].Columns[Patient]"
                      cachedDataType="i4"
                      cachedName="Patient"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[Patient]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[Patient]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].Columns[DTP]"
                      cachedDataType="i4"
                      cachedName="DTP"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[DTP]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[DTP]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].Columns[BatchFaxDate]"
                      cachedDataType="dbDate"
                      cachedName="BatchFaxDate"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[BatchFaxDate]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[BatchFaxDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[pmdclientid]"
                      dataType="i4"
                      name="pmdclientid" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      name="currentFaxStatus" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[NPI]"
                      dataType="i4"
                      name="NPI" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[Patient]"
                      dataType="i4"
                      name="Patient" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[DTP]"
                      dataType="i4"
                      name="DTP" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input].ExternalColumns[BatchFaxDate]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="BatchFaxDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="BatchFaxStatusAll"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[MRM_BatchFaxStatusAll]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Connections[OleDbConnection]"
                  connectionManagerID="{6311C9A2-D389-4B9C-B757-1A615A452B59}:invalid"
                  connectionManagerRefId="{6311C9A2-D389-4B9C-B757-1A615A452B59}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].Columns[currentFaxStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="currentFaxStatus"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].ExternalColumns[currentFaxStatus]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[currentFaxStatus]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].Columns[NPI]"
                      cachedDataType="i4"
                      cachedName="NPI"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].ExternalColumns[NPI]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[NPI]" />
                    <inputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].Columns[BatchFaxDate]"
                      cachedDataType="dbDate"
                      cachedName="BatchFaxDate"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].ExternalColumns[BatchFaxDate]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[BatchFaxDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].ExternalColumns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      name="currentFaxStatus" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].ExternalColumns[NPI]"
                      dataType="i4"
                      name="NPI" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input].ExternalColumns[BatchFaxDate]"
                      dataType="dbDate"
                      name="BatchFaxDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load BatchFaxStatus for Email Notification"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT 
d.pmdclientid
,[currentFaxStatus]
,count(distinct p.providerNPI) NPI
,count(distinct d.pmdpatientID) as Patient
,count(distinct d.cdedtpid)  DTP
,p.campaigncreatedate as BatchFaxDate

FROM [SCMRM].[dbo].[mrmBatchFaxPDFs] p
INNER JOIN [SCMRM].[dbo].[mrmBatchFaxDTPs] d
on p.[mrmBatchFaxPDFID] = d.[mrmBatchFaxPDFID]
 
where p.campaigncreatedate =?
group by d.pmdclientid,[currentFaxStatus],p.[campaigncreatedate]
order by d.pmdclientid, currentfaxstatus</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{19082A7B-DFB0-4CEB-8F9C-DE4755D9163B};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Connections[OleDbConnection]"
                  connectionManagerID="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  connectionManagerRefId="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[pmdclientid]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[pmdclientid]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[pmdclientid]"
                      name="pmdclientid"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[currentFaxStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[currentFaxStatus]"
                      length="50"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[currentFaxStatus]"
                      name="currentFaxStatus"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[NPI]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[NPI]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[NPI]"
                      name="NPI"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[Patient]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[Patient]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[Patient]"
                      name="Patient"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[DTP]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[DTP]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[DTP]"
                      name="DTP"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[BatchFaxDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[BatchFaxDate]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].Columns[BatchFaxDate]"
                      name="BatchFaxDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[pmdclientid]"
                      dataType="i4"
                      name="pmdclientid" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      name="currentFaxStatus" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[NPI]"
                      dataType="i4"
                      name="NPI" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[Patient]"
                      dataType="i4"
                      name="Patient" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[DTP]"
                      dataType="i4"
                      name="DTP" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[BatchFaxDate]"
                      dataType="dbDate"
                      name="BatchFaxDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[pmdclientid]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[pmdclientid]"
                      name="pmdclientid" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[currentFaxStatus]"
                      name="currentFaxStatus" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[NPI]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[NPI]"
                      name="NPI" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[Patient]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[Patient]"
                      name="Patient" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[DTP]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[DTP]"
                      name="DTP" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[BatchFaxDate]"
                      dataType="dbDate"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[BatchFaxDate]"
                      name="BatchFaxDate" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load BatchFaxStatusAll for Email Notification"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT 
[currentFaxStatus]
,count(distinct p.providerNPI) NPI
,p.campaigncreatedate as BatchFaxDate


FROM [SCMRM].[dbo].[mrmBatchFaxPDFs] p
INNER JOIN [SCMRM].[dbo].[mrmBatchFaxDTPs] d
on p.[mrmBatchFaxPDFID] = d.[mrmBatchFaxPDFID]
 
where p.campaigncreatedate =?
group by [currentFaxStatus],p.[campaigncreatedate]
order by currentfaxstatus</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{19082A7B-DFB0-4CEB-8F9C-DE4755D9163B};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Connections[OleDbConnection]"
                  connectionManagerID="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  connectionManagerRefId="{41920AF9-8DB7-4D45-A69E-694E95087E27}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[currentFaxStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[currentFaxStatus]"
                      length="50"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[currentFaxStatus]"
                      name="currentFaxStatus"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[NPI]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[NPI]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[NPI]"
                      name="NPI"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[BatchFaxDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[BatchFaxDate]"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].Columns[BatchFaxDate]"
                      name="BatchFaxDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      name="currentFaxStatus" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[NPI]"
                      dataType="i4"
                      name="NPI" />
                    <externalMetadataColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output].ExternalColumns[BatchFaxDate]"
                      dataType="dbDate"
                      name="BatchFaxDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[currentFaxStatus]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[currentFaxStatus]"
                      name="currentFaxStatus" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[NPI]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[NPI]"
                      name="NPI" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[BatchFaxDate]"
                      dataType="dbDate"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[BatchFaxDate]"
                      name="BatchFaxDate" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load BatchFaxStatus for Email Notification.Paths[OLE DB Source Output]"
              endId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table.Inputs[OLE DB Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Load BatchFaxStatus for Email Notification.Paths[OLE DB Source Output1]"
              endId="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll.Inputs[OLE DB Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove BatchFaxStatus Current Date"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D3D3F0D0-9F9F-4AF6-95D8-CC27A9FE1F4E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove BatchFaxStatus Current Date"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6311C9A2-D389-4B9C-B757-1A615A452B59}"
          SQLTask:SqlStatementSource="Declare @BatchFaxDate date = ?  &#xA;  &#xA;Delete FROM [Stars_Call_Lists].[dbo].[MRM_BatchFaxStatus] where BatchFaxDate = @BatchFaxDate&#xA;&#xA; Delete FROM [Stars_Call_Lists].[dbo].[MRM_BatchFaxStatusAll] where BatchFaxDate = @BatchFaxDate" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::BatchFaxDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Notification"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6697C685-6706-40F9-9517-7DBA395D2EF6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Notification"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6311C9A2-D389-4B9C-B757-1A615A452B59}"
          SQLTask:SqlStatementSource="dbo.MRM_FaxStatus_Notification 'BatchFax Send Status', 'allison.wilson@pharmmd.com;Stars_Developers@pharmmd.com', 'P10PRDSDE003OPS', ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::BatchFaxDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A18C049E-396A-4ED0-B71A-410E66610803}"
      DTS:From="Package\Get BatchFaxDate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get fax status from faximinion" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{69CEAFAD-79B9-4ADF-BB88-BC5CE5567596}"
      DTS:From="Package\Get fax status from faximinion"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load BatchFax Sent to SCMRM Interventions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{86EF9499-3AE4-4430-A16C-17A19C02D973}"
      DTS:From="Package\Load BatchFax Sent to SCMRM Interventions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Remove BatchFaxStatus Current Date" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C8367D82-577B-4934-89CB-E1FC17CCFE5F}"
      DTS:From="Package\Remove BatchFaxStatus Current Date"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Load BatchFaxStatus for Email Notification" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{C5619E16-5E43-4FB7-AB3E-5D91558F2BD7}"
      DTS:From="Package\Load BatchFaxStatus for Email Notification"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Send Notification" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="260,42"
          Id="Package\Get BatchFaxDate"
          TopLeft="157,23" />
        <NodeLayout
          Size="260,42"
          Id="Package\Get fax status from faximinion"
          TopLeft="157,98" />
        <NodeLayout
          Size="260,42"
          Id="Package\Load BatchFax Sent to SCMRM Interventions"
          TopLeft="157,173" />
        <NodeLayout
          Size="260,42"
          Id="Package\Load BatchFaxStatus for Email Notification"
          TopLeft="157,323" />
        <NodeLayout
          Size="260,42"
          Id="Package\Remove BatchFaxStatus Current Date"
          TopLeft="157,248" />
        <NodeLayout
          Size="260,42"
          Id="Package\Send Notification"
          TopLeft="157,398" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="287,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="287,140">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="287,215">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="287,290">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="287,365">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="This package sends all genareted fax files to Faximinion"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="321,40"
          Id="f9430dc7-845e-41bf-8186-f98e2d404453"
          TopLeft="439,92" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get fax status from faximinion">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="288,42"
          Id="Package\Get fax status from faximinion\update recipientFaxNumber in SCMRM"
          TopLeft="110.333342936304,290.214274565785" />
        <NodeLayout
          Size="126,42"
          Id="Package\Get fax status from faximinion\Multicast"
          TopLeft="375.833339459367,160.99999667917" />
        <NodeLayout
          Size="217,42"
          Id="Package\Get fax status from faximinion\Get all Fax which need status"
          TopLeft="340.333333399561,64.785714143393" />
        <NodeLayout
          Size="242,42"
          Id="Package\Get fax status from faximinion\Update fax Status from Faximinion"
          TopLeft="498,294" />
        <EdgeLayout
          Id="Package\Get fax status from faximinion.Paths[OLE DB Source Output]"
          TopLeft="448.833333399561,106.785714143393">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.99999394019397,54.214282535777"
              Start="0,0"
              End="-9.99999394019397,46.714282535777">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.1071412678885" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.1071412678885"
                    Point2="0,27.1071412678885"
                    Point3="-4,27.1071412678885" />
                  <mssgle:LineSegment
                    End="-5.99999394019397,27.1071412678885" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.99999394019397,27.1071412678885"
                    Point2="-9.99999394019397,27.1071412678885"
                    Point3="-9.99999394019397,31.1071412678885" />
                  <mssgle:LineSegment
                    End="-9.99999394019397,46.714282535777" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get fax status from faximinion.Paths[Multicast Output 3]"
          TopLeft="458.500006126034,202.99999667917">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="160.499993873966,91.00000332083"
              Start="0,0"
              End="160.499993873966,83.50000332083">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.0846408517489" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.0846408517489"
                    Point2="0,37.0846408517489"
                    Point3="4,37.0846408517489" />
                  <mssgle:LineSegment
                    End="156.499993873966,37.0846408517489" />
                  <mssgle:CubicBezierSegment
                    Point1="156.499993873966,37.0846408517489"
                    Point2="160.499993873966,37.0846408517489"
                    Point3="160.499993873966,41.0846408517489" />
                  <mssgle:LineSegment
                    End="160.499993873966,83.50000332083" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get fax status from faximinion.Paths[Multicast Output 1]"
          TopLeft="419.1666727927,202.99999667917">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-164.833329856396,87.214277886615"
              Start="0,0"
              End="-164.833329856396,79.714277886615">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5418687312224" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5418687312224"
                    Point2="0,35.5418687312224"
                    Point3="-4,35.5418687312224" />
                  <mssgle:LineSegment
                    End="-160.833329856396,35.5418687312224" />
                  <mssgle:CubicBezierSegment
                    Point1="-160.833329856396,35.5418687312224"
                    Point2="-164.833329856396,35.5418687312224"
                    Point3="-164.833329856396,39.5418687312224" />
                  <mssgle:LineSegment
                    End="-164.833329856396,79.714277886615" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get fax status from faximinion\Get all Fax which need status">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load BatchFaxStatus for Email Notification">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="279,42"
          Id="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification"
          TopLeft="202,89" />
        <NodeLayout
          Size="279,42"
          Id="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table"
          TopLeft="203,161" />
        <EdgeLayout
          Id="Package\Load BatchFaxStatus for Email Notification.Paths[OLE DB Source Output]"
          TopLeft="342,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="290,42"
          Id="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification"
          TopLeft="598,84" />
        <NodeLayout
          Size="278,42"
          Id="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll"
          TopLeft="606,160" />
        <EdgeLayout
          Id="Package\Load BatchFaxStatus for Email Notification.Paths[OLE DB Source Output1]"
          TopLeft="744,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatus for Email Notification">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatusAll">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load BatchFaxStatus for Email Notification\BatchFaxStatus Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load BatchFaxStatus for Email Notification\Load BatchFaxStatusAll for Email Notification">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>